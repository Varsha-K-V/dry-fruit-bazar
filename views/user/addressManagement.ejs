<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Address Management</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-4">
    <div class="mb-3">
        <a href="/userProfile" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Back
        </a>
    </div>
    <h2>My Addresses</h2>
    <br>
    <br>
    <br>
        
    
    <!-- Add Address Button -->
    <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addAddressModal">
        <i class="fas fa-plus"></i> Add New Address
    </button>

    <!-- Address Cards -->
    <div class="row">
        <% addresses.forEach(address => { %>
            <div class="col-md-6 mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title"><%= address.addresstype.toUpperCase() %></h5>
                        <p class="card-text">
                            <%= address.name %><br>
                            <%= address.landmark %><br>
                            <%= address.city %>, <%= address.state %><br>
                            PIN: <%= address.pincode %><br>
                            Alt. Phone: <%= address.alternativeNo || 'N/A' %>
                        </p>
                        <div class="btn-group">
                            <button class="btn btn-sm btn-primary edit-address" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#editAddressModal"
                                    data-address='<%= JSON.stringify(address) %>'>
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button class="btn btn-sm btn-danger delete-address" 
                                    data-address-id="<%= address._id %>">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        <% }); %>
    </div>

    <!-- Add Address Modal -->
<div class="modal fade" id="addAddressModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addAddressForm" action="" method="">
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Full Name</label>
                        <input type="text" class="form-control" name="name" required placeholder="Enter Full Name">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Address Type</label>
                        <select class="form-select" name="addresstype" required>
                            <option value="Home">Home</option>
                            <option value="Office">Office</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">City</label>
                        <input type="text" class="form-control" name="city" required placeholder="Enter City">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">State</label>
                        <input type="text" class="form-control" name="state" required placeholder="Enter State">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">PIN Code</label>
                        <input type="text" class="form-control" name="pincode" required pattern="\d{6}" 
                               title="Please enter a valid 6-digit PIN code" placeholder="Enter PIN Code">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Landmark</label>
                        <input type="text" class="form-control" name="landmark" required placeholder="Enter Landmark">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Alternative Number</label>
                        <input type="text" class="form-control" name="alternativeNo" pattern="\d{10}" 
                               title="Please enter a valid 10-digit phone number" placeholder="Enter Alternative Number">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Address</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal fade" id="editAddressModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editAddressForm" action="" method="">
                <input type="hidden" name="address_id" id="edit_address_id">
                <div class="modal-body">
                    <!-- Name Field -->
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" class="form-control" name="name" id="edit_name" required>
                    </div>

                    <!-- Address Type -->
                    <div class="mb-3">
                        <label class="form-label">Address Type</label>
                        <select class="form-select" name="addresstype" id="edit_addresstype" required>
                            <option value="Home">Home</option>
                            <option value="Office">Office</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>

                    <!-- City -->
                    <div class="mb-3">
                        <label class="form-label">City</label>
                        <input type="text" class="form-control" name="city" id="edit_city" required>
                    </div>

                    <!-- State -->
                    <div class="mb-3">
                        <label class="form-label">State</label>
                        <input type="text" class="form-control" name="state" id="edit_state" required>
                    </div>

                    <!-- PIN Code -->
                    <div class="mb-3">
                        <label class="form-label">PIN Code</label>
                        <input type="text" class="form-control" name="pincode" id="edit_pin_code" required>
                    </div>

                    <!-- Landmark -->
                    <div class="mb-3">
                        <label class="form-label">Landmark</label>
                        <input type="text" class="form-control" name="landmark" id="edit_landmark" required>
                    </div>

                    <!-- Alternative Number -->
                    <div class="mb-3">
                        <label class="form-label">Alternative Number</label>
                        <input type="text" class="form-control" name="alternativeNo" id="edit_alternative_no">
                    </div>
                    
                </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Update Address</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

</div>

</body>

    <!-- Scripts -->
   <!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Validation function for both add and edit forms
        function validateAddressForm(form) {
            const fullName = form.querySelector("input[name='name']").value.trim();
            const addressType = form.querySelector("select[name='addresstype']").value.trim();
            const city = form.querySelector("input[name='city']").value.trim();
            const state = form.querySelector("input[name='state']").value.trim();
            const pincode = form.querySelector("input[name='pincode']").value.trim();
            const landmark = form.querySelector("input[name='landmark']").value.trim();
            const altNumber = form.querySelector("input[name='alternativeNo']").value.trim();
            let errors = [];
    
            
            if (!/^[A-Za-z\s]{3,50}$/.test(fullName)) {
                errors.push("Full Name should contain only letters and spaces (3-50 characters).");
            }
            
            if (!addressType) {
                errors.push("Address Type is required.");
            }
            
            if (!/^[A-Za-z\s]{2,50}$/.test(city)) {
                errors.push("City should contain only letters and spaces (2-50 characters).");
            }
            
            if (!/^[A-Za-z\s]{2,50}$/.test(state)) {
                errors.push("State should contain only letters and spaces (2-50 characters).");
            }
            
            if (!/^\d{6}$/.test(pincode)) {
                errors.push("PIN Code must be exactly 6 digits.");
            }
            
            if (landmark.length < 3) {
                errors.push("Landmark must be at least 3 characters long.");
            }
            
            if (altNumber && !/^\d{10}$/.test(altNumber)) {
                errors.push("Alternative Number must be exactly 10 digits.");
            }
    
            if (errors.length > 0) {
                Swal.fire({
                    icon: "error",
                    title: "Validation Errors",
                    html: errors.join("<br>")
                });
                return false;
            }
            return true;
        }
    
        
        document.getElementById("addAddressForm").addEventListener("submit", async function(event) {
            event.preventDefault();
            if (!validateAddressForm(this)) {
                return;
            }
            let formData = new FormData(this);
            let jsonData = {};
            formData.forEach((value, key) => { jsonData[key] = value; });
    
            try {
                let response = await fetch('/addresses', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(jsonData)
                });
                let data = await response.json();
                if (data.success) {
                    Swal.fire('Success', data.message, 'success').then(() => {
                        $('#addAddressModal').modal('hide');
                        location.reload();
                    });
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            } catch (error) {
                Swal.fire('Error', 'Something went wrong!', 'error');
            }
        });
    
        // Handle submission for the Edit Address form
        document.getElementById("editAddressForm").addEventListener("submit", async function(event) {
            event.preventDefault();
            if (!validateAddressForm(this)) {
                return;
            }
            let formData = new FormData(this);
            let jsonData = {};
            formData.forEach((value, key) => { jsonData[key] = value; });
    
            try {
                let response = await fetch('/addresses/edit', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(jsonData)
                });
                let data = await response.json();
                if (data.success) {
                    Swal.fire('Success', data.message, 'success').then(() => {
                        $('#editAddressModal').modal('hide');
                        location.reload();
                    });
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            } catch (error) {
                Swal.fire('Error', 'Something went wrong!', 'error');
            }
        });
    
        // Populate the Edit Address modal when an edit button is clicked
        document.querySelectorAll(".edit-address").forEach(btn => {
            btn.addEventListener("click", function() {
                
                const address = JSON.parse(this.getAttribute("data-address"));
                document.getElementById("edit_address_id").value = address._id;
                document.getElementById("edit_name").value = address.name;
                document.getElementById("edit_addresstype").value = address.addresstype;
                document.getElementById("edit_city").value = address.city;
                document.getElementById("edit_state").value = address.state;
                document.getElementById("edit_pin_code").value = address.pincode;
                document.getElementById("edit_landmark").value = address.landmark;
                document.getElementById("edit_alternative_no").value = address.alternativeNo || "";
            });
        });
    
        // Delete Address with SweetAlert confirmation
        document.querySelectorAll(".delete-address").forEach(btn => {
            btn.addEventListener("click", function() {
                const addressId = this.getAttribute("data-address-id");
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to recover this address!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/addresses/delete/${addressId}`, {
                            method: "DELETE",
                            headers: { 'Content-Type': 'application/json' }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire("Deleted!", "Address deleted successfully.", "success")
                                    .then(() => location.reload());
                            } else {
                                Swal.fire("Error", "Failed to delete address.", "error");
                            }
                        })
                        .catch(error => {
                            console.error("Error:", error);
                            Swal.fire("Error", "Something went wrong.", "error");
                        });
                    }
                });
            });
        });
    });
    </script>
    

</html>