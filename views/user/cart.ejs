<%- include("../../views/partials/user/header") %>
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Shopping Cart</title>
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #f4f4f4;
                margin: 0;
                padding: 0;
            }

            .cart-container {
                width: 80%;
                margin: 20px auto;
                background-color: white;
                padding: 20px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                border-radius: 8px;
            }

            h2 {
                text-align: center;
            }

            .empty-cart-message {
                text-align: center;
                color: #888;
                font-size: 18px;
            }

            .cart-items {
                display: flex;
                flex-direction: column;
                gap: 20px;
            }

            .cart-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
                background-color: #f9f9f9;
                padding: 15px;
                border-radius: 8px;
                box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
            }

            .cart-item img {
                width: 80px;
                height: 80px;
                object-fit: cover;
                border-radius: 5px;
            }

            .cart-item-details {
                flex: 1;
                padding-left: 15px;
            }

            .cart-item-name {
                font-size: 18px;
                font-weight: bold;
                margin-bottom: 5px;
            }

            .cart-item-price {
                font-size: 16px;
                color: #555;
            }

            .cart-item-quantity {
                width: 60px;
                padding: 5px;
                font-size: 14px;
                border: 1px solid #ddd;
                border-radius: 5px;
                margin-top: 10px;
            }

            .remove-item {
                background-color: #ff4c4c;
                color: white;
                border: none;
                padding: 7px 15px;
                border-radius: 5px;
                cursor: pointer;
            }

            .remove-item:hover {
                background-color: #e13c3c;
            }

            .cart-summary {
                margin-top: 30px;
                padding: 15px;
                background-color: #f9f9f9;
                border-radius: 8px;
                box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
            }

            .cart-summary-item {
                display: flex;
                justify-content: space-between;
                margin-bottom: 10px;
            }

            .cart-actions {
                display: flex;
                justify-content: space-between;
                margin-top: 20px;
            }

            .checkout-button,
            .continue-shopping-button {
                padding: 10px 20px;
                font-size: 16px;
                cursor: pointer;
                border: none;
                border-radius: 5px;
            }

            .checkout-button {
                background-color: #4caf50;
                color: white;
                border-radius: 5px;
            }

            .checkout-button:hover {
                background-color: #45a049;
            }

            .continue-shopping-button {
                background-color: #ddd;
                color: #333;
            }

            .continue-shopping-button:hover {
                background-color: #ccc;
            }

            /* Common styles for the action buttons */
            .cart-actions button {
                padding: 10px 20px;
                font-size: 16px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

            .cart-actions .checkout-button,
            .cart-actions .continue-shopping-button {
                background-color: #4CAF50;
                /* Green color for primary actions */
                color: white;
            }

            .cart-actions .checkout-button:hover,
            .cart-actions .continue-shopping-button:hover {
                background-color: #45a049;
                /* Darker green on hover */
            }

            .cart-actions .clear-cart-button {
                background-color: #f44336;
                /* Red color for removal action */
                color: white;
                font-size: 14px;
                padding: 8px 16px;
            }

            .cart-actions .clear-cart-button:hover {
                background-color: #d32f2f;
                /* Darker red on hover */
            }

            /* Styles for button when removed (like remove button) */
            .remove-item {
                background-color: #f44336;
                /* Red color for remove action */
                color: white;
                border: none;
                padding: 8px 16px;
                cursor: pointer;
                font-size: 14px;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }

            .remove-item:hover {
                background-color: #d32f2f;
                /* Darker red on hover */
            }

            .out-of-stock-message {
                background-color: #ffebee;
                color: #c62828;
                padding: 8px 12px;
                border-radius: 4px;
                font-weight: bold;
                margin: 10px 0;
            }

            .low-stock-message {
                background-color: #fff3e0;
                color: #ef6c00;
                padding: 8px 12px;
                border-radius: 4px;
                font-weight: bold;
                margin: 10px 0;
            }

            button:disabled {
                opacity: 0.5;
                cursor: not-allowed;
            }

            .quantity-selector {
                display: flex;
                align-items: center;
                gap: 1rem;
                margin: 1rem 0;
            }
        </style>
    </head>

    <body>
        <div class="cart-container">
            <h2>Your Shopping Cart</h2>
            <% if (!cart || cart.items.length===0) { %>
                <div class="empty-cart-message">
                    Your cart is currently empty. Start adding items to your cart!
                </div>
                <% } else { %>
                    <!-- Cart Items Section -->
                    <% cart.items.forEach(item=> { %>
                        <% if (item.productId) { %>
                            <div class="cart-item" data-product-id="<%= item.productId._id %>"
                                data-variant-id="<%= item.variantId._id %>">
                                <img src="/uploads/productImage/<%= item.productId?.productImage[0] || 'productImage/default.jpg' %>"
                                    alt="<%= item.productId?.productName || 'Product' %>">


                                <div class="cart-item-details">
                                    <h4 class="cart-item-name">
                                        <%= item.productId.productName || "Unknown Product" %>
                                    </h4>
                                    <p class="cart-item-price">
                                        <% if (item.price < item.originalPrice) { %>
                                            <span style="text-decoration: line-through; color: gray;">
                                                ₹<%= item.originalPrice.toFixed(2) %>
                                            </span>
                                            <br>
                                            <span style="color: red; font-weight: bold;">
                                                ₹<%= item.price.toFixed(2) %>
                                            </span>
                                            <% } else { %>
                                                ₹<%= item.price.toFixed(2) %>
                                                    <% } %>
                                    </p>
                                    <p class="cart-item-subtotal">
                                        Subtotal: ₹<%= item.subtotal ? item.subtotal.toFixed(2) : "0.00" %>
                                    </p>

                                    <% if (!item.inStock) { %>
                                            <div class="out-of-stock-message" style="color: red; margin: 10px 0;">
                                                Out of Stock
                                            </div>
                                        <% } else if (item.availableStock < item.quantity) { %>
                                            <div class="low-stock-message" style="color: orange; margin: 10px 0;">
                                                Only <%= item.availableStock %> items available
                                            </div>
                                        <% } %>

                                    <div class="quantity-selector"
                                        style="display: flex; align-items: center; gap: 10px;">
                                        <button type="button"
                                            onclick="updateCartItemQuantity(this, -1, '<%= item.productId._id %>', '<%= item.variantId._id %>')"
                                            style="padding: 5px 10px;" <%=!item.inStock ? 'disabled' : '' %>>-</button>
                                        <input type="text" class="cart-item-quantity"
                                            style="width: 50px; text-align: center;" value="<%= item.quantity %>"
                                            readonly data-product-id="<%= item.productId._id %>"
                                            data-variant-id="<%= item.variantId._id %>">
                                        <button type="button"
                                            onclick="updateCartItemQuantity(this, 1, '<%= item.productId._id %>', '<%= item.variantId._id %>')"
                                            style="padding: 5px 10px;" <%=!item.inStock ? 'disabled' : '' %>>+</button>
                                    </div>
                                </div>



                                <button class="remove-item"
                                    onclick="removeItem('<%= item.productId._id %>', '<%= item.variantId._id %>')">
                                    Remove
                                </button>
                            </div>
                            <% } else { %>
                                <p class="error">Error: Product details not found</p>
                                <% } %>
                                    <% }) %>

                                        <!-- Cart Total -->
                                        <!-- <div class="cart-total">
            <h3>Total: $<%= cart.totalPrice.toFixed(2) %></h3>
        </div> -->

                                        <!-- Cart Summary -->
                                        <div class="cart-summary">
                                            <div class="cart-summary-item">
                                                <p>Subtotal</p>
                                                <p class="subtotal-price">₹<%= cart.totalPrice.toFixed(2) %>
                                                </p>
                                            </div>
                                            <div class="cart-summary-item">
                                                <p>Shipping</p>
                                                <p class="shipping-price">₹50.00</p>
                                            </div>
                                            <div class="cart-summary-item">
                                                <p>Total</p>
                                                <p class="total-price">₹<%= (cart.totalPrice + 50).toFixed(2) %>
                                                </p>
                                            </div>
                                        </div>

                                        <!-- Cart Actions -->
                                        <div class="cart-actions">
                                            <!-- <button class="checkout-button" onclick="proceedToCheckout()">Proceed to Checkout</button> -->

                                            <button class="clear-cart-button" onclick="clearCart()">Clear Cart</button>
                                            <a href="/shop"><button class="continue-shopping-button" style="background-color: #088178;">Continue
                                                    Shopping</button></a>

                                            <a href="/checkOut" id="checkout-button"
                                                style="background-color:#088178; color: white; padding: 10px 20px; text-decoration: none; display: inline-block;"
                                                class="border-3 border-dark px-4 py-2 border-radius-5">
                                                Proceed to Checkout
                                            </a>
                                        </div>
                                        <% } %>


        </div>


        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                let outOfStock = false;

                document.querySelectorAll(".out-of-stock-message").forEach((msg) => {
                    outOfStock = true;
                });

                let checkoutButton = document.getElementById("checkout-button");

                if (outOfStock) {
                    checkoutButton.style.backgroundColor = "gray";
                    checkoutButton.style.cursor = "not-allowed";
                    checkoutButton.removeAttribute("href"); 

                    checkoutButton.addEventListener("click", function (event) {
                        event.preventDefault();
                    
                    });
                }
            });
            function removeItem(productId, variantId) {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to undo this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Yes, remove it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/cart/remove/${productId}/${variantId}`, { method: "DELETE" })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire("Removed!", "Item has been removed.", "success").then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire("Error!", data.message, "error");
                                }
                            })
                            .catch(error => {
                                Swal.fire("Oops!", "Something went wrong.", "error");
                                console.error("Error:", error);
                            });
                    }
                });
            }

            async function updateCartItemQuantity(button, change, productId, variantId) {
                try {
                    let quantityInput = button.parentElement.querySelector('.cart-item-quantity');
                    let newQuantity = parseInt(quantityInput.value) + change;

                    if (newQuantity < 1) newQuantity = 1;
                    if (newQuantity > 5) newQuantity = 5; 


                    const res = await updateCartItem(newQuantity, productId, variantId);
                    console.log("res", res)
                    quantityInput.value = newQuantity;
                } catch (error) {
                    console.log(error)
                    Swal.fire({
                        icon: "error",
                        title: "Failed",
                        text: error.message || "quantity is not updated"
                    })
                }

            }




            function updateCartItem(newQuantity, productId, variantId) {



                return fetch(`/cart/update/${productId}/${variantId}`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ quantity: newQuantity })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log("success")
                        if (data.success) {
                            const itemSubtotalElement = document.querySelector(`[data-product-id="${productId}"][data-variant-id="${variantId}"] .cart-item-subtotal`);
                            if (itemSubtotalElement) {
                                itemSubtotalElement.innerHTML = `Subtotal: ₹${(data.newSubtotal).toFixed(2)}`;
                            }


                            const totalPriceElement = document.querySelector(".total-price");
                            if (totalPriceElement) {
                                totalPriceElement.textContent = `₹${(data.newTotalPrice + 50).toFixed(2)}`; 
                            }


                            const subtotalPriceElement = document.querySelector(".subtotal-price");
                            if (subtotalPriceElement) {
                                subtotalPriceElement.textContent = `₹${(data.newTotalPrice).toFixed(2)}`;
                            }

                            const itemPriceElement = document.querySelector(
                                `[data-product-id="${productId}"][data-variant-id="${variantId}"] .cart-item-price`
                            );
                            if (itemPriceElement) {
                                if (parseFloat(data.newPrice) < parseFloat(data.originalPrice)) {
                                    itemPriceElement.innerHTML = `<span style="text-decoration: line-through; color: gray;">₹${parseFloat(data.originalPrice).toFixed(2)}</span><br>
                                          <span style="color: red; font-weight: bold;">₹${parseFloat(data.newPrice).toFixed(2)}</span>`;
                                } else {
                                    itemPriceElement.textContent = `₹${parseFloat(data.newPrice).toFixed(2)}`;
                                }
                            }



                        } else {
                            throw new Error(data.message)
                        }
                    })
                    .catch(error => {
                        // console.error("Error:sdf", error)
                        Swal.fire({
                            icon: "error",
                            title: "Failed",
                            text: error.message || "quantity is not updated"
                        })
                        throw new Error(error.message)
                    })
                // ).catch(error=> {throw new Error(error.message)} )
            }

            function clearCart() {
                fetch('/cart/clear', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {

                            const cartContainer = document.querySelector('.cart-items-container');
                            if (cartContainer) {
                                cartContainer.innerHTML = '';
                            }


                            Swal.fire({
                                title: 'Cart Cleared!',
                                text: 'Your cart has been successfully emptied.',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {

                                location.reload();

                            });


                            document.querySelector('.total-price').textContent = '₹0.00';
                            document.querySelector('.subtotal-price').textContent = '₹0.00';
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: 'There was an issue clearing the cart.',
                                icon: 'error',
                                confirmButtonText: 'Try Again'
                            });
                        }
                    })
                    .catch(error => {
                        // console.error("Error:", error);
                        Swal.fire({
                            title: 'Error',
                            text: 'An unexpected error occurred.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
            }

            function proceedToCheckout() {
                fetch('/cart/check-cart', {
                    method: 'GET',
                    headers: { 'Content-Type': 'application/json' }
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Your cart is empty!",
                                text: "Please add items before proceeding to checkout.",
                            });
                        }
                    })
                    .catch(error => {
                        console.error("Error:", error);
                        Swal.fire({
                            icon: "error",
                            title: "Oops!",
                            text: "Something went wrong. Please try again.",
                        });
                    });
            }





        </script>



    </body>





    <%- include("../../views/partials/user/footer") %>