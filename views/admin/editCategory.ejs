<%- include("../../views/partials/admin/header") %>
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 mt-60">
            <form id="editCategoryForm">
                <input type="hidden" name="_method" value="PUT" />

                <div class="d-grid text-end mt-30 col-md-5">
                    <button class="btn btn-primary" type="submit">Update category</button>
                </div>
                <div class="mb-4 mt-30">
                    <label for="product_name" class="form-label">Name</label>
                    <input type="text" id="categoryName" name="categoryName" value="<%=category.name%>" class="form-control border" />
                </div>
                
                <div class="mb-4">
                    <label class="form-label">Description</label>
                    <textarea  id="description" name="description" class="form-control border"><%=category.description%></textarea>
                </div>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.addEventListener("DOMContentLoaded", function() { 
        document.getElementById("editCategoryForm").addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent form from reloading the page

            const categoryId = "<%= category._id %>";
            const name = document.getElementById("categoryName").value.trim();
            const description = document.getElementById("description").value.trim();

            // ðŸ”¹ Validation
            if (name === "") {
                Swal.fire({
                    icon: "warning",
                    title: "Validation Error",
                    text: "Category name cannot be empty!",
                });
                return;
            }

            if (name.length < 3) {
                Swal.fire({
                    icon: "warning",
                    title: "Validation Error",
                    text: "Category name must be at least 3 characters long!",
                });
                return;
            }

            if (!/^[A-Za-z\s]+$/.test(name)) {
                Swal.fire({
                    icon: "warning",
                    title: "Validation Error",
                    text: "Category name can only contain letters and spaces!",
                });
                return;
            }

            if (description === "") {
                Swal.fire({
                    icon: "warning",
                    title: "Validation Error",
                    text: "Description cannot be empty!",
                });
                return;
            }

            if (description.length < 5) {
                Swal.fire({
                    icon: "warning",
                    title: "Validation Error",
                    text: "Description must be at least 5 characters long!",
                });
                return;
            }

            try {
                const response = await fetch(`/admin/editCategory/${categoryId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ categoryName: name, description: description }),
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error);
                }

                const data = await response.json();

                await Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: data.message || 'Category updated successfully',
                });

                window.location.href = "/admin/category";

            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Something went wrong',
                });
            }
        });
    });
</script>


<%- include("../../views/partials/admin/footer") %>

